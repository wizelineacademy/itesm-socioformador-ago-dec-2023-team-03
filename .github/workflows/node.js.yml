# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    
    - run: npm ci
      working-directory: ./backend
      
    - run: npm ci
      working-directory: ./frontend
      
    - run: npm run build --if-present
      working-directory: ./frontend
      env:
        AUTH0_SECRET: ${{secrets.AUTH0_SECRET}}
        AUTH0_BASE_URL: ${{secrets.AUTH0_BASE_URL}}
        AUTH0_ISSUER_BASE_URL: ${{secrets.AUTH0_ISSUER_BASE_URL}}
        AUTH0_CLIENT_ID: ${{secrets.AUTH0_CLIENT_ID}}
        AUTH0_CLIENT_SECRET: ${{secrets.AUTH0_CLIENT_SECRET}}
        NEXT_PUBLIC_API_URL: ${{secrets.NEXT_PUBLIC_API_URL}}
      
    # - run: npm build
    #   working-directory: ./frontend
    #   env:
    #     AUTH0_SECRET: ${{secrets.AUTH0_SECRET}}
    #     AUTH0_BASE_URL: ${{secrets.AUTH0_BASE_URL}}
    #     AUTH0_ISSUER_BASE_URL: ${{secrets.AUTH0_ISSUER_BASE_URL}}
    #     AUTH0_CLIENT_ID: ${{secrets.AUTH0_CLIENT_ID}}
    #     AUTH0_CLIENT_SECRET: ${{secrets.AUTH0_CLIENT_SECRET}}
    #     NEXT_PUBLIC_API_URL: ${{secrets.NEXT_PUBLIC_API_URL}}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2
      - name: deploy to lightsail via ssh
        uses: appleboy/ssh-action@master
        with:
          host: 23.23.104.122
          username: bitnami
          key: ${{secrets.SSH_KEY}}
          script: | 
            cd /home/bitnami/apps/wizeprompt
            git pull
            cd ../backend
            pm2 stop backend
            npm ci
            pm2 start backend
            cd ../frontend
            pm2 stop prodApp
            npm ci
            npm run build
            pm2 start prodApp
          
